syntax = "proto3";

package hope.swagger;

import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/type.proto";
import "mock/mock.proto";

option java_multiple_files = true;
option java_outer_classname = "SwaggerFieldProto";
option java_package = "hope.proto.swagger";

// Scheme describes the schemes supported by the OpenAPI Swagger
// and Operation objects.
enum Scheme {
    UNKNOWN = 0;
    HTTP = 1;
    HTTPS = 2;
    WS = 3;
    WSS = 4;
}


enum Priority {
    //not set
    NA = 0;
    //very low
    LOW = 1;
    //middle priority need team leader approve
    MIDDLE = 4;
    //high priority need the project manager the approve
    HIGH = 8;
    //very critical need the vp to approve
    CRITICAL = 16;
    //may break the business need the CTO to approve
    FATAL = 32;
}

// `Swagger` is a representation of OpenAPI v2 specification's Swagger object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#swaggerObject
//
// Example:
//
//  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
//    info: {
//      title: "Echo API";
//      version: "1.0";
//      description: "";
//      contact: {
//        name: "gRPC-Gateway project";
//        url: "https://github.com/grpc-ecosystem/grpc-gateway";
//        email: "none@example.com";
//      };
//      license: {
//        name: "BSD 3-Clause License";
//        url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/master/LICENSE.txt";
//      };
//    };
//    schemes: HTTPS;
//    consumes: "application/json";
//    produces: "application/json";
//  };
//
message Swagger {
    // Specifies the OpenAPI Specification version being used. It can be
    // used by the OpenAPI UI and other clients to interpret the API listing. The
    // value MUST be "2.0".
    string swagger = 1;
    // Provides metadata about the API. The metadata can be used by the
    // clients if needed.
    Info info = 2;
    // The host (name or ip) serving the API. This MUST be the host only and does
    // not include the scheme nor sub-paths. It MAY include a port. If the host is
    // not included, the host serving the documentation is to be used (including
    // the port). The host does not support path templating.
    string host = 3;
    // The base path on which the API is served, which is relative to the host. If
    // it is not included, the API is served directly under the host. The value
    // MUST start with a leading slash (/). The basePath does not support path
    // templating.
    // Note that using `base_path` does not change the endpoint paths that are
    // generated in the resulting OpenAPI file. If you wish to use `base_path`
    // with relatively generated OpenAPI paths, the `base_path` prefix must be
    // manually removed from your `google.api.http` paths and your code changed to
    // serve the API from the `base_path`.
    string base_path = 4;
    // The transfer protocol of the API. Values MUST be from the list: "http",
    // "https", "ws", "wss". If the schemes is not included, the default scheme to
    // be used is the one used to access the OpenAPI definition itself.
    repeated Scheme schemes = 5;
    // A list of MIME types the APIs can consume. This is global to all APIs but
    // can be overridden on specific API calls. Value MUST be as described under
    // Mime Types.
    repeated string consumes = 6;
    // A list of MIME types the APIs can produce. This is global to all APIs but
    // can be overridden on specific API calls. Value MUST be as described under
    // Mime Types.
    repeated string produces = 7;
    // field 8 is reserved for 'paths'.
    reserved 8;
    // field 9 is reserved for 'definitions', which at this time are already
    // exposed as and customizable as proto messages.
    reserved 9;
    // An object to hold responses that can be used across operations. This
    // property does not define global responses for all operations.
    map<string, Response> responses = 10;
    // Security scheme definitions that can be used across the specification.
    SecurityDefinitions security_definitions = 11;
    // A declaration of which security schemes are applied for the API as a whole.
    // The list of values describes alternative security schemes that can be used
    // (that is, there is a logical OR between the security requirements).
    // Individual operations can override this definition.
    repeated SecurityRequirement security = 12;
    // field 13 is reserved for 'tags', which are supposed to be exposed as and
    // customizable as proto services. TODO(ivucica): add processing of proto
    // service objects into OpenAPI v2 Tag objects.
    reserved 13;
    // Additional external documentation.
    ExternalDocumentation external_docs = 14;
    map<string, google.protobuf.Value> extensions = 15;

    //
    // predefined tag list
    //
    repeated Tag tags = 100;
}

// `Operation` is a representation of OpenAPI v2 specification's Operation object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#operationObject
//
// Example:
//
//  service EchoService {
//    rpc Echo(SimpleMessage) returns (SimpleMessage) {
//      option (google.api.http) = {
//        get: "/v1/example/echo/{id}"
//      };
//
//      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
//        summary: "Get a message.";
//        operation_id: "getMessage";
//        tags: "echo";
//        responses: {
//          key: "200"
//            value: {
//            description: "OK";
//          }
//        }
//      };
//    }
//  }
message Operation {
    // A list of tags for API documentation control. Tags can be used for logical
    // grouping of operations by resources or any other qualifier.
    repeated string tags = 1;
    // A short summary of what the operation does. For maximum readability in the
    // swagger-ui, this field SHOULD be less than 120 characters.
    string summary = 2;
    // A verbose explanation of the operation behavior. GFM syntax can be used for
    // rich text representation.
    string description = 3;
    // Additional external documentation for this operation.
    ExternalDocumentation external_docs = 4;
    // Unique string used to identify the operation. The id MUST be unique among
    // all operations described in the API. Tools and libraries MAY use the
    // operationId to uniquely identify an operation, therefore, it is recommended
    // to follow common programming naming conventions.
    string operation_id = 5;
    // A list of MIME types the operation can consume. This overrides the consumes
    // definition at the OpenAPI Object. An empty value MAY be used to clear the
    // global definition. Value MUST be as described under Mime Types.
    repeated string consumes = 6;
    // A list of MIME types the operation can produce. This overrides the produces
    // definition at the OpenAPI Object. An empty value MAY be used to clear the
    // global definition. Value MUST be as described under Mime Types.
    repeated string produces = 7;
    // field 8 is reserved for 'parameters'.
    reserved 8;
    // The list of possible responses as they are returned from executing this
    // operation.
    map<string, Response> responses = 9;
    // The transfer protocol for the operation. Values MUST be from the list:
    // "http", "https", "ws", "wss". The value overrides the OpenAPI Object
    // schemes definition.
    repeated Scheme schemes = 10;
    // Declares this operation to be deprecated. Usage of the declared operation
    // should be refrained. Default value is false.
    bool deprecated = 11;
    // A declaration of which security schemes are applied for this operation. The
    // list of values describes alternative security schemes that can be used
    // (that is, there is a logical OR between the security requirements). This
    // definition overrides any declared top-level security. To remove a top-level
    // security declaration, an empty array can be used.
    repeated SecurityRequirement security = 12;
    map<string, google.protobuf.Value> extensions = 13;

    //extend by hope
    Priority priority = 14;

    // `request_name`
    // if this not set the name will be just named according to the class or the type
    // this work only the request body as one bean
    // or the very first parameter, other please define in the parameters
    //
    string request_name = 15;


    // ----------------extend by HOPE----------------

    //
    // default result is not pageable
    // if yes do two things
    //
    // wrapper the pageable parameter to the argument
    // wrapper the result to the pageable result
    //
    optional bool pageable = 51;

    //
    // whether to keep the raw response
    // or wrapper to out result
    // default is to wrapper it unless we set this to true
    //
    optional bool raw = 52;

    //
    // pure for the java whether we need to pass the HttpRequest to the controller level
    //
    optional bool request = 53;

    //
    // pure for the java whether we need to pass the HttpResponse to the controller level
    //
    optional bool response = 54;

    //
    // pure for the java whether we need to pass the HttpSession to the controller level
    //
    optional bool session = 55;

    //
    // whether the input is plural that meaning it is a list, this is different from the pageable things
    //
    optional bool input_plural = 56;

    //
    // whether the output is plural that meaning it is a list, this is different from the pageable things
    //
    optional bool out_plural = 57;

    //
    // the parameters things pass by path/query header or cookies etc
    //
    optional Parameters parameters = 100;

    // Determines the URL pattern is matched by those rules.
    // This pattern can be
    // used with any of the {get|put|post|delete|patch} methods.
    oneof pattern {
        // Maps to HTTP GET. Used for listing and getting information about
        // resources.
        string get = 302;

        // Maps to HTTP PUT. Used for replacing a resource.
        string put = 303;

        // Maps to HTTP POST. Used for creating a resource or performing an action.
        string post = 304;

        // Maps to HTTP DELETE. Used for deleting a resource.
        string delete = 305;

        // Maps to HTTP PATCH. Used for updating a resource.
        string patch = 306;
    }

    //
    // the mock for the single response,
    //
    // no need for component response type
    //
    // only for primitive response type like: string, number or date, uuid etc
    //
    optional mock.Mock mock = 401;

    //
    // the Authorization limitation of this method
    // if empty then this method is anonymous
    //
    optional Authorization authorization = 402;


    enum Group {
        //API belong to the end-user group
        CUSTOMER = 0;
        //API belong to the tenant backend management group
        TENANT = 1;
        //API belong to the platform backend management group
        PLATFORM = 2;
    }
    //
    // simple mark the group of this operation on resource
    // not same as TAGS
    //
    Group group = 500;

    //
    // Under post scenario, whether the body can be empty, that is `@RequestBody(required = false)`
    // default is must be not empty, if this set, then it can be empty;
    //
    bool body_empty = 600;
}

message AuthorizationStruct {
    enum Combinator {
        AND = 0;
        OR = 1;
    }


    enum PredefinedRoleCheckerType {
        NA = 0 [deprecated = true];
        PLATFORM = 1;
        PLATFORM_MANAGER = 2;
        PLATFORM_OWNER = 3;
        TENANT = 4;
        TENANT_MANAGER = 5;
        TENANT_OWNER = 6;
        MEMBER = 7 [deprecated = true];
    }

    message Roles {
        // roles are created dynamically
        // so we cannot limit it
        // but you got to set the carefully under your security context
        // and follow the principle of least privilege
        repeated string roles = 1;
    }

    oneof role {
        // Either PLATFORM or TENANT
        // Avoid to write a very long role names this is a short-cut
        // if you has no platform or tenant concept this will be ignored
        PredefinedRoleCheckerType predefined_role_checker = 3;

        // Keep same with the spring security's design principle and syntax:
        //
        // https://docs.spring.io/spring-security/reference/servlet/authorization/method-security.html#using-authorization-expression-fields-and-methods
        //
        //  hasRole  || hasAnyRole
        //
        Roles roles = 2;
    }

    // Keep same with the spring security's design principle and syntax:
    //
    // https://docs.spring.io/spring-security/reference/servlet/authorization/method-security.html#using-authorization-expression-fields-and-methods
    //
    //  hasAuthority || hasAnyAuthority
    //
    //This must work with domain's `Authority` enum class definition;
    //  for example:  `hope.user.proto.enumeration.Authority`  or `hope.user.wire.enumeration.Authority`
    //  Swagger operation's Authorization's security check will be restricted checked:
    //  for example, if it has authorities set as: [USER_ADD,USER_DELETE] then it will performance validation as:
    //  `hope.user.proto.enumeration.Authority.USER_ADD` and `hope.user.proto.enumeration.Authority.USER_DELETE`
    //  Must exist in the `Authority` enum class; Otherwise the compiler will fail and terminated;
    //  While in the `Authority` the definition as:
    //  `USER_ADD = 1 [(hope.constant.field) = {code: 10001, message: "user:add", cn_message: "添加用户"}];`
    repeated string authorities = 4;

    // How the Roles and Authorities composite together
    Combinator combinator = 10;
}

message Authorization {

    // this is low level authorization
    enum LowLimitRiskyMode {
        // No login
        ANONYMOUS = 0;
        LOGIN = 1;
        // login and active, meaning the account not be frozen or locked
        ACTIVE = 2;
    }

    oneof kind {
        //
        // whether this is anonymous
        // if not set this will be default to false, that meaning, customer must be login
        //
        LowLimitRiskyMode low_limit_risky_mode = 1;

        // this is authorization model base the role and permission combinator
        AuthorizationStruct authorization_struct = 2;

        //this will be passed to the expression engine to do the stuff - SpEL
        string expression = 15;

    }
}

// `Parameters` is a representation of OpenAPI v2 specification's parameters object.
// Note: this extends by HOPE again
// https://swagger.io/specification/#parameter-object
message Parameters {
    repeated Parameter parameter = 1;
}

// `HeaderParameter` a HTTP header parameter.
// https://swagger.io/specification/#parameter-object
message Parameter {

    //
    // REQUIRED. The location of the parameter. Possible values are "query", "header", "path" or "cookie".
    // extend by HOPE plus SESSION
    //
    enum IN {
        QUERY = 0;
        HEADER = 1;
        PATH = 2;
        COOKIE = 3;
        SESSION = 4;
    }

    string name = 1;

    IN in = 2;

    //
    // delegate to the schema to descriptor the parameter
    //
    JSONSchema schema = 10;

    //
    // whether this parameter data is plural, present as array|list
    //
    google.protobuf.BoolValue plural = 20;
}



// `Header` is a representation of OpenAPI v2 specification's Header object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#headerObject
//
message Header {
    // `Description` is a short description of the header.
    string description = 1;
    // The type of the object. The value MUST be one of "string", "number", "integer", or "boolean". The "array" type is not supported.
    string type = 2;
    // `Format` The extending format for the previously mentioned type.
    string format = 3;
    // field 4 is reserved for 'items', but in OpenAPI-specific way.
    reserved 4;
    // field 5 is reserved `Collection Format` Determines the format of the array if type array is used.
    reserved 5;
    // `Default` Declares the value of the header that the server will use if none is provided.
    // See: https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-6.2.
    // Unlike JSON Schema this value MUST conform to the defined type for the header.
    string default = 6;
    // field 7 is reserved for 'maximum'.
    reserved 7;
    // field 8 is reserved for 'exclusiveMaximum'.
    reserved 8;
    // field 9 is reserved for 'minimum'.
    reserved 9;
    // field 10 is reserved for 'exclusiveMinimum'.
    reserved 10;
    // field 11 is reserved for 'maxLength'.
    reserved 11;
    // field 12 is reserved for 'minLength'.
    reserved 12;
    // 'Pattern' See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.3.
    string pattern = 13;
    // field 14 is reserved for 'maxItems'.
    reserved 14;
    // field 15 is reserved for 'minItems'.
    reserved 15;
    // field 16 is reserved for 'uniqueItems'.
    reserved 16;
    // field 17 is reserved for 'enum'.
    reserved 17;
    // field 18 is reserved for 'multipleOf'.
    reserved 18;
}

// `Response` is a representation of OpenAPI v2 specification's Response object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#responseObject
//
message Response {
    // `Description` is a short description of the response.
    // GFM syntax can be used for rich text representation.
    string description = 1;
    // `Schema` optionally defines the structure of the response.
    // If `Schema` is not provided, it means there is no content to the response.
    Schema schema = 2;
    // `Headers` A list of headers that are sent with the response.
    // `Header` name is expected to be a string in the canonical format of the MIME header key
    // See: https://golang.org/pkg/net/textproto/#CanonicalMIMEHeaderKey
    map<string, Header> headers = 3;
    // `Examples` gives per-mimetype response examples.
    // See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#example-object
    map<string, string> examples = 4;
    map<string, google.protobuf.Value> extensions = 5;
}

// `Info` is a representation of OpenAPI v2 specification's Info object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#infoObject
//
// Example:
//
//  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
//    info: {
//      title: "Echo API";
//      version: "1.0";
//      description: "";
//      contact: {
//        name: "gRPC-Gateway project";
//        url: "https://github.com/grpc-ecosystem/grpc-gateway";
//        email: "none@example.com";
//      };
//      license: {
//        name: "BSD 3-Clause License";
//        url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/master/LICENSE.txt";
//      };
//    };
//    ...
//  };
//
message Info {
    // The title of the application.
    string title = 1;
    // A short description of the application. GFM syntax can be used for rich
    // text representation.
    string description = 2;
    // The Terms of Service for the API.
    string terms_of_service = 3;
    // The contact information for the exposed API.
    Contact contact = 4;
    // The license information for the exposed API.
    License license = 5;
    // Provides the version of the application API (not to be confused
    // with the specification version).
    string version = 6;
    map<string, google.protobuf.Value> extensions = 7;
}

// `Contact` is a representation of OpenAPI v2 specification's Contact object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#contactObject
//
// Example:
//
//  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
//    info: {
//      ...
//      contact: {
//        name: "gRPC-Gateway project";
//        url: "https://github.com/grpc-ecosystem/grpc-gateway";
//        email: "none@example.com";
//      };
//      ...
//    };
//    ...
//  };
//
message Contact {
    // The identifying name of the contact person/organization.
    string name = 1;
    // The URL pointing to the contact information. MUST be in the format of a
    // URL.
    string url = 2;
    // The email address of the contact person/organization. MUST be in the format
    // of an email address.
    string email = 3;
}

// `License` is a representation of OpenAPI v2 specification's License object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#licenseObject
//
// Example:
//
//  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
//    info: {
//      ...
//      license: {
//        name: "BSD 3-Clause License";
//        url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/master/LICENSE.txt";
//      };
//      ...
//    };
//    ...
//  };
//
message License {
    // The license name used for the API.
    string name = 1;
    // A URL to the license used for the API. MUST be in the format of a URL.
    string url = 2;
}

// `ExternalDocumentation` is a representation of OpenAPI v2 specification's
// ExternalDocumentation object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#externalDocumentationObject
//
// Example:
//
//  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
//    ...
//    external_docs: {
//      description: "More about gRPC-Gateway";
//      url: "https://github.com/grpc-ecosystem/grpc-gateway";
//    }
//    ...
//  };
//
message ExternalDocumentation {
    // A short description of the target documentation. GFM syntax can be used for
    // rich text representation.
    string description = 1;
    // The URL for the target documentation. Value MUST be in the format
    // of a URL.
    string url = 2;
}

// `Schema` is a representation of OpenAPI v2 specification's Schema object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject
//
message Schema {
    JSONSchema json_schema = 1;
    // Adds support for polymorphism. The discriminator is the schema property
    // name that is used to differentiate between other schema that inherit this
    // schema. The property name used MUST be defined at this schema and it MUST
    // be in the required property list. When used, the value MUST be the name of
    // this schema or any schema that inherits it.
    string discriminator = 2;
    // Relevant only for Schema "properties" definitions. Declares the property as
    // "read only". This means that it MAY be sent as part of a response but MUST
    // NOT be sent as part of the request. Properties marked as readOnly being
    // true SHOULD NOT be in the required list of the defined schema. Default
    // value is false.
    bool read_only = 3;
    // field 4 is reserved for 'xml'.
    reserved 4;
    // Additional external documentation for this schema.
    ExternalDocumentation external_docs = 5;
    // A free-form property to include an example of an instance for this schema in JSON.
    // This is copied verbatim to the output.
    string example = 6;
}

// `JSONSchema` represents properties from JSON Schema taken, and as used, in
// the OpenAPI v2 spec.
//
// This includes changes made by OpenAPI v2.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject
//
// See also: https://cswr.github.io/JsonSchema/spec/basic_types/,
// https://github.com/json-schema-org/json-schema-spec/blob/master/schema.json
//
// Example:
//
//  message SimpleMessage {
//    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
//      json_schema: {
//        title: "SimpleMessage"
//        description: "A simple message."
//        required: ["id"]
//      }
//    };
//
//    // Id represents the message identifier.
//    string id = 1; [
//        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
//          description: "The unique identifier of the simple message."
//        }];
//  }
//
message JSONSchema {
    // field 1 is reserved for '$id', omitted from OpenAPI v2.
    reserved 1;
    // field 2 is reserved for '$schema', omitted from OpenAPI v2.
    reserved 2;
    // Ref is used to define an external reference to include in the message.
    // This could be a fully qualified proto message reference, and that type must
    // be imported into the protofile. If no message is identified, the Ref will
    // be used verbatim in the output.
    // For example:
    //  `ref: ".google.protobuf.Timestamp"`.
    string ref = 3;
    // field 4 is reserved for '$comment', omitted from OpenAPI v2.
    reserved 4;
    // The title of the schema.
    string title = 5;
    // A short description of the schema.
    string description = 6;
    string default = 7;
    bool read_only = 8;
    // A free-form property to include a JSON example of this field. This is copied
    // verbatim to the output swagger.json. Quotes must be escaped.
    // This property is the same for 2.0 and 3.0.0 https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/3.0.0.md#schemaObject  https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject
    string example = 9;
    google.protobuf.DoubleValue multiple_of = 10;
    // Maximum represents an inclusive upper limit for a numeric instance. The
    // value of MUST be a number,
    google.protobuf.DoubleValue maximum = 11;

    //
    //Whether to exclude max
    // if true   ( value <  max )
    // if false  ( value <= max )
    //
    google.protobuf.BoolValue exclusive_maximum = 12;

    // minimum represents an inclusive lower limit for a numeric instance. The
    // value of MUST be a number,
    // TODO this can not work as the default zero this will mess the logic of >=0 or?
    google.protobuf.DoubleValue minimum = 13;

    //
    //Whether to exclude min
    // if true   ( min <  value )
    // if false  ( min <= value )
    //
    google.protobuf.BoolValue exclusive_minimum = 14;

    google.protobuf.UInt64Value max_length = 15;
    google.protobuf.UInt64Value min_length = 16;
    string pattern = 17;
    // field 18 is reserved for 'additionalItems', omitted from OpenAPI v2.
    reserved 18;
    // field 19 is reserved for 'items', but in OpenAPI-specific way.
    // TODO(ivucica): add 'items'?
    reserved 19;
    google.protobuf.UInt64Value max_items = 20;
    google.protobuf.UInt64Value min_items = 21;
    google.protobuf.BoolValue unique_items = 22;
    // field 23 is reserved for 'contains', omitted from OpenAPI v2.
    reserved 23;
    google.protobuf.UInt64Value max_properties = 24;
    google.protobuf.UInt64Value min_properties = 25;
    repeated string required = 26;
    // field 27 is reserved for 'additionalProperties', but in OpenAPI-specific
    // way. TODO(ivucica): add 'additionalProperties'?
    reserved 27;
    // field 28 is reserved for 'definitions', omitted from OpenAPI v2.
    reserved 28;
    // field 29 is reserved for 'properties', but in OpenAPI-specific way.
    // TODO(ivucica): add 'additionalProperties'?
    reserved 29;
    // following fields are reserved, as the properties have been omitted from
    // OpenAPI v2:
    // patternProperties, dependencies, propertyNames, const
    reserved 30 to 33;
    // Items in 'array' must be unique.
    repeated string array = 34;

    // Used when define the inline Query/Path Parameters (implicit)
    enum JSONSchemaFormat {
        //Not used, default to string or the explicit type of the field in the message
        UNKNOWN = 0;
        //what we care about
        //same: `format = bool`
        BOOLEAN = 4;
        //same: `format = int32`
        INTEGER = 5;
        //same: `format = double`
        DOUBLE = 6;
        STRING = 7;
        //same: `format = float`
        FLOAT = 8;
        //same: `format = big-decimal`
        BIG_DECIMAL = 9;
        //same: `format = int64`
        LONG = 10;
        //same: `format = date`
        DATE = 11;
        //same: `format = date-time`
        DATE_TIME = 12;
        //same: `format = time`
        TIME = 13;
        //same: `format = uuid`
        UUID = 14;
        //same: `format = password`
        PASSWORD = 15;
        //same: `format = email`
        EMAIL = 16;
        //same: `format = binary`
        BINARY = 17;
    }

    // `Format`:  (OpenAPI Specification v3.1.0)
    // Refer to the https://spec.openapis.org/oas/latest.html#format
    //      type	format	Comments
    //      integer	int32	signed 32 bits
    //      integer	int64	signed 64 bits (a.k.a long)
    //      number	float
    //      number	double
    //      string	password	A hint to UIs to obscure input.
    //
    // Please use this carefully, as if type define in the `Message` the field's explicit type will tell more thing
    // Prefer to use this when define the Query/Path/Header/Cookie ad-hoc
    // Attention:
    //  those only work as hint for code generator,
    //  for different target language, the implement will be different
    //  So used it carefully
    //
    JSONSchemaFormat format = 36;


    // following fields are reserved, as the properties have been omitted from
    // OpenAPI v2: contentMediaType, contentEncoding, if, then, else
    reserved 37 to 41;
    // field 42 is reserved for 'allOf', but in OpenAPI-specific way.
    // TODO(ivucica): add 'allOf'?
    reserved 42;
    // following fields are reserved, as the properties have been omitted from
    // OpenAPI v2:
    // anyOf, oneOf, not
    reserved 43 to 45;
    // Items in `enum` must be unique https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.5.1
    repeated string enum = 46;

    // Additional field level properties used when generating the OpenAPI v2 file.
    FieldConfiguration field_configuration = 1001;

    // 'FieldConfiguration' provides additional field level properties used when generating the OpenAPI v2 file.
    // These properties are not defined by OpenAPIv2, but they are used to control the generation.
    message FieldConfiguration {
        // Alternative parameter name when used as path parameter. If set, this will
        // be used as the complete parameter name when this field is used as a path
        // parameter. Use this to avoid having auto generated path parameter names
        // for overlapping paths.
        string path_param_name = 47;
    }

    //whether this field can be empty? default is not empty that meaning required
    google.protobuf.BoolValue empty = 48;

    map<string, google.protobuf.Value> extensions = 50;

    //
    // Those for the advanced validator
    // include cn phone
    // added by aaron since 2022-10-01
    //

    //
    // this equal to
    // assert = true  is @jakarta.validation.constraints.AssertTrue
    // assert = false is @jakarta.validation.constraints.AssertFalse
    google.protobuf.BoolValue assert = 1011;

    //
    // this equal to
    // @jakarta.validation.constraints.DecimalMax(value = "0.0", inclusive = false)
    //
    string decimal_max = 1012;

    //
    //@jakarta.validation.constraints.DecimalMin(value = "0.0", inclusive = false)
    //
    string decimal_min = 1013;

    //
    // this equal to
    // @jakarta.validation.constraints.Digits(integer=3, fraction=2)
    //
    google.protobuf.Int32Value digits_integer = 1014;
    google.protobuf.Int32Value digits_fraction = 1015;


    //
    // this equal to
    // @jakarta.validation.constraints.Email
    //
    google.protobuf.BoolValue email = 1016;


    enum TimeConstraintType {
        //NOT SET, NO LIMITATION
        NA = 0;
        //
        // this equal to
        // @jakarta.validation.constraints.Future
        //
        FUTURE = 1;
        //
        // this equal to
        // @jakarta.validation.constraints.FutureOrPresent
        //
        FUTURE_OR_PRESENT = 2;
        //
        // this equal to
        // @jakarta.validation.constraints.Past
        //
        PAST = 3;
        //
        // this equal to
        // @jakarta.validation.constraints.PastOrPresent
        //
        PAST_OR_PRESENT = 4;
    }

    optional TimeConstraintType time_constraint_type = 1017;


    oneof format_of_date {
        //
        // Predefined date format
        //
        DateFormat date_format = 1018;

        //
        // if not predefined DateFormat you can use the pattern to composite anything you need:
        //
        // https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html
        //
        string customized_date_format = 1019;
    }

    //
    // the mock rule for this field
    //
    optional mock.Mock mock = 1020;

}

// `Tag` is a representation of OpenAPI v2 specification's Tag object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#tagObject
//
message Tag {
    // field 1 is reserved for 'name'. In our generator, this is (to be) extracted
    // from the name of proto service, and thus not exposed to the user, as
    // changing tag object's name would break the link to the references to the
    // tag in individual operation specifications.
    //
    // TODO(ivucica): Add 'name' property. Use it to allow override of the name of
    // global Tag object, then use that name to reference the tag throughout the
    // OpenAPI file.
    reserved 1;
    // A short description for the tag. GFM syntax can be used for rich text
    // representation.
    string description = 2;

    //if not set explicitly use the service name otherwise use this
    string name = 3;
    // Additional external documentation for this tag.
    ExternalDocumentation external_docs = 4;
}

// `SecurityDefinitions` is a representation of OpenAPI v2 specification's
// Security Definitions object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securityDefinitionsObject
//
// A declaration of the security schemes available to be used in the
// specification. This does not enforce the security schemes on the operations
// and only serves to provide the relevant details for each scheme.
message SecurityDefinitions {
    // A single security scheme definition, mapping a "name" to the scheme it
    // defines.
    map<string, SecurityScheme> security = 1;
}

// `SecurityScheme` is a representation of OpenAPI v2 specification's
// Security Scheme object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securitySchemeObject
//
// Allows the definition of a security scheme that can be used by the
// operations. Supported schemes are basic authentication, an API key (either as
// a header or as a query parameter) and OAuth2's common flows (implicit,
// password, application and access code).
message SecurityScheme {
    // The type of the security scheme. Valid values are "basic",
    // "apiKey" or "oauth2".
    enum Type {
        TYPE_INVALID = 0;
        TYPE_BASIC = 1;
        TYPE_API_KEY = 2;
        TYPE_OAUTH2 = 3;
        TYPE_HTTP = 4;
    }

    // The location of the API key. Valid values are "query" or "header".
    enum In {
        IN_INVALID = 0;
        IN_QUERY = 1;
        IN_HEADER = 2;
        IN_COOKIE = 3;
    }

    // The flow used by the OAuth2 security scheme. Valid values are
    // "implicit", "password", "application" or "accessCode".
    enum Flow {
        FLOW_INVALID = 0;
        FLOW_IMPLICIT = 1;
        FLOW_PASSWORD = 2;
        FLOW_APPLICATION = 3;
        FLOW_ACCESS_CODE = 4;
    }

    // The type of the security scheme. Valid values are "basic",
    // "apiKey" or "oauth2".
    Type type = 1;
    // A short description for security scheme.
    string description = 2;
    // The name of the header or query parameter to be used.
    // Valid for apiKey.
    string name = 3;
    // The location of the API key. Valid values are "query" or
    // "header".
    // Valid for apiKey.
    In in = 4;
    // The flow used by the OAuth2 security scheme. Valid values are
    // "implicit", "password", "application" or "accessCode".
    // Valid for oauth2.
    Flow flow = 5;
    // The authorization URL to be used for this flow. This SHOULD be in
    // the form of a URL.
    // Valid for oauth2/implicit and oauth2/accessCode.
    string authorization_url = 6;
    // The token URL to be used for this flow. This SHOULD be in the
    // form of a URL.
    // Valid for oauth2/password, oauth2/application and oauth2/accessCode.
    string token_url = 7;
    // The available scopes for the OAuth2 security scheme.
    // Valid for oauth2.
    Scopes scopes = 8;
    map<string, google.protobuf.Value> extensions = 9;
}

// `SecurityRequirement` is a representation of OpenAPI v2 specification's
// Security Requirement object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securityRequirementObject
//
// Lists the required security schemes to execute this operation. The object can
// have multiple security schemes declared in it which are all required (that
// is, there is a logical AND between the schemes).
//
// The name used for each property MUST correspond to a security scheme
// declared in the Security Definitions.
message SecurityRequirement {
    // If the security scheme is of type "oauth2", then the value is a list of
    // scope names required for the execution. For other security scheme types,
    // the array MUST be empty.
    message SecurityRequirementValue {
        repeated string scope = 1;
    }
    // Each name must correspond to a security scheme which is declared in
    // the Security Definitions. If the security scheme is of type "oauth2",
    // then the value is a list of scope names required for the execution.
    // For other security scheme types, the array MUST be empty.
    map<string, SecurityRequirementValue> security_requirement = 1;
}

// `Scopes` is a representation of OpenAPI v2 specification's Scopes object.
//
// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#scopesObject
//
// Lists the available scopes for an OAuth2 security scheme.
message Scopes {
    // Maps between a name of a scope to a short description of it (as the value
    // of the property).
    map<string, string> scope = 1;
}



// `DateFormat` is used to define the Data/Time used in the context
//
// this looks quite java ways; but it can work as best to keep compatible with other language
enum DateFormat {
    //
    // Basic ISO date	'20111203'
    // equal: yyyyMMdd
    //
    BASIC_ISO_DATE = 0;

    //
    // ISO Local Date	'2011-12-03'
    // equal: yyyy-MM-dd
    //
    ISO_LOCAL_DATE = 1;

    //
    // ISO time  '10:15:30'
    // equals: HH:mm:ss.SSSSSSS
    //
    ISO_TIME = 2;

    //
    // Time without offset	'10:15:30'
    // equal: HH:mm:ss
    //
    ISO_LOCAL_TIME = 3;

    //
    // ISO Local Date and Time	'2011-12-03T10:15:30'
    // yyyy-MM-dd T HH:mm:ss
    //
    ISO_LOCAL_DATE_TIME = 7;

    //
    //equal: yyyy-MM-dd HH:mm:ss
    //
    YYYY_MM_DD_HH_MM_SS = 15;

    //
    //equal: yyyy-MM-dd HH:mm:ss:SSS
    //
    YYYY_MM_DD_HH_MM_SS_SSS = 16;

    //
    //equal: yyyy/MM/dd
    //
    SLASH_YYYY_MM_DD = 17;

    //
    //equal: yyyy/MM/dd HH:mm:ss
    //
    SLASH_YYYY_MM_DD_HH_MM_SS = 18;

    //
    //equal: yyyy/MM/dd HH:mm:ss:SSS
    //
    SLASH_YYYY_MM_DD_HH_MM_SS_SSS = 19;

    //
    //equal: HH:mm
    //
    HH_MM = 20;
}

message ServiceSchema {
    //The tag of this service
    Tag tag = 1;

    //The base path of this service
    string path = 2;

    // Description of this Service
    // This is not `Tag`, just easy for the understanding and read
    // Since 2023-10-25 Added by Aaron
    string description = 1044;
}